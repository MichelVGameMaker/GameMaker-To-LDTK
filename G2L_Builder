var _tiles_number = array_length(tiles);
show_debug_message("Tiles number");
show_debug_message(string(_tiles_number)); // actual lentght of array of tiles
show_debug_message(string(_width_in_tiles*_height_in_tiles));  // calculated length of tiles data
var _grid_size    = layer.__gridSize;
var _width_in_tiles  = _.room_get_width()/_gridSize;
var _height_in_tiles = _.room_get_height()/_gridSize;
var _width_in_tiles  = layer.__cWid
var _height_in_tiles = layer.__cHei
show_debug_message("Cells width");
show_debug_message(string(layer.__cWid));  // actual nb of tiles
show_debug_message(string(_.room_get_width()/_gridSize)); // calculated nb of tiles


tiles_struct[$ layer_name+"_1"] = array_create(_width_in_tiles*_height_in_tiles);
var tile_index = 0;
while (_cel < _tiles_number) {
	tile_index = (tiles[_cel].px[0]/gridSize) + (tiles[_cel].px[1]/gridSize * l.__cWid);
	var layer_n = 1;
	while (tiles_struct[$ layer_name+"_"+string(layer_n)][tile_index] != 0) {
		layer_n++;
		if (!variable_struct_exists(tiles_struct,layer_name+"_"+string(layer_n))) {
			tiles_struct[$ layer_name+"_"+string(layer_n)] = array_create((rm.width/gridSize)*(rm.height/gridSize));
		}
	}
	_cel++;
}

tiles = {
	SerialiseWidth  : _width_in_tiles,
	SerialiseHeight : _height_in_tiles,
	TileSerialiseData : "", // from above
};

