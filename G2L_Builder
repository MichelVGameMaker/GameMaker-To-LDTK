// return a struct describing an empty layer in the format expected within a .yy room file, within the layers array
G2L_create_yy_instance_layer(_name, _depth, _grid_x, _grid_y) 
{
	return = {
	{
		resourceType:"GMRInstanceLayer",
		resourceVersion:1.0,
		name:_name,
		visible:true,
		depth:_depth,
		userdefinedDepth:false, // or true... 
		inheritLayerDepth:false,
		inheritLayerSettings:false,
		gridX: _grid_x,
		gridY: _grid_y,
		layers:[],
		hierarchyFrozen:false,
		effectEnabled:true,
		effectType:null,
		properties:[],
		instances:[],
	};
}
G2L_create_yy_asset_layer(_name, _depth, _grid_x, _grid_y) 
{
	return = {
	{
		resourceType:"GMRAssetLayer",
		resourceVersion:1.0,
		name:_name,
		visible:true,
		depth:_depth,
		userdefinedDepth:false, // or true... 
		inheritLayerDepth:false,
		inheritLayerSettings:false,
		gridX: _grid_x,
		gridY: _grid_y,
		layers:[],
		hierarchyFrozen:false,
		effectEnabled:true,
		effectType:null,
		properties:[],
		assets:[],
	};
}
G2L_create_yy_background_layer(_name, _depth, _grid_x, _grid_y, _colour) 
{
	return = {
	{
		resourceType:"GMRBackgroundLayer",
		resourceVersion:1.0,
		name:_name,
		visible:true,
		depth:_depth,
		userdefinedDepth:false, // or true... 
		inheritLayerDepth:false,
		inheritLayerSettings:false,
		gridX: _grid_x,
		gridY: _grid_y,
		layers:[],
		hierarchyFrozen:false,
		effectEnabled:true,
		effectType:null,
		properties:[],
		spriteId:null,
		colour:_colour,
		x:0,
		y:0,
		htiled:false,
		vtiled:false,
		hspeed:0.0,
		vspeed:0.0,
		stretch:false,
		animationFPS:15.0,
		animationSpeedType:0,
		userdefinedAnimFPS:false,
	};
}
G2L_create_yy_tile_layer(_name, _depth, _grid_x, _grid_y, _tileset, _width, _height) 
{
	return = {
	{
		resourceType:"GMTileLayer",
		resourceVersion:1.0,
		name:_name,
		visible:true,
		depth:_depth,
		userdefinedDepth:false, // or true... 
		inheritLayerDepth:false,
		inheritLayerSettings:false,
		gridX: _grid_x,
		gridY: _grid_y,
		layers:[],
		hierarchyFrozen:false,
		effectEnabled:true,
		effectType:null,
		properties:[],
		x:0,
		y:0,
		tileSetId:
		{
			name:_tileset,
			path:"tilesets/" + _tileset + "/" + _tileset + ".yy",
		},
		tiles: 
		{
			TileDataFormat:1, // ??
			SerialiseWidth:_width,
			SerialiseHeight:_height,
			TileCompressedData:[],
		}
	};
}


// update and return an existing struct describing a layer after including the passed variables in the format expected within a .yy room file, within the layers array
G2L_set_yy_layer(_yy_layer_struct, _name, _depth, _grid_x, _grid_y, _instances) 
{
	_yy_layer_struct.name = _name;
	_yy_layer_struct.depth =_depth;
	_yy_layer_struct.gridX = _grid_x;
	_yy_layer_struct.gridY = _grid_y;
	_yy_layer_struct.instances = _instances;
	return _yy_layer_struct;
}
// update and return an existing struct describing the room after including the passed variables in the format expected within a .yy room file, within the layers array
G2L_set_yy_room(_yy_room_struct, _width, _height, _inst_creation_order) 
{
	_yy_room_struct.roomSettings.Width = _name;
	_yy_room_struct.depth =_depth;
	_yy_room_struct.gridX = _grid_x;
	_yy_room_struct.gridY = _grid_y;
	_yy_room_struct.instanceCreationOrder = _inst_creation_order;
	return _yy_room_struct;
}
// return a struct describing an instance's property in the format that is expected within a .yy room file, within an GMRInstance
G2L_create_yy_instance_property(object_name, _property_name, _property_value) {
	return 
	{
		resourceType:"GMOverriddenProperty",
		resourceVersion:1.0,
		name:"",
		propertyId:
		{
			name:_property_name,
			path:"objects/" + object_name + "/" + object_name + ".yy",
		},
		objectId:
		{
			name:object_name,
			path:object_name + "/" + object_name + ".yy",
		},
		value:_property_value,
	};
	
}

// return a struct describing an instance by using the format that is expected within a .yy room file, within an InstanceLayer
G2L_create_yy_instance(_x, _y, _object_name, _unique_id, _variables_struct) {
	var _yy_instance_struct = {
	resourceType:"GMRInstance",
	resourceVersion:1.0,
	name:_unique_id,
	properties:[],
	isDnd:false,
	objectId:
	{
		name:_object_name,
		path:_object_name + "/" + _object_name + ".yy",
	},
	inheritCode:false,
	hasCreationCode:false,
	colour:4294967295,
	rotation:0.0,
	scaleX:1.0,
	scaleY:1.0,
	imageIndex:0,
	imageSpeed:1.0,
	inheritedItemId:null,
	frozen:false,
	ignore:false,
	inheritItemSettings:false,
	x:_x,
	y:_y,
	}

if _variables_struct != undefined 
{
	var _properties_array = [];
	var _variables_names = variable_struct_get_names(_variables_struct);
	var _i = 0;
	repeat(array_length(_variables_names))
	{
		var _variable_name_i = _variables_names[ _i];
		if _variable_name_i      == "image_blend" _yy_instance_struct.coulour    = color_to_decimal(_variables_struct[$ _variable_name_i]);
		else if _variable_name_i == "image_angle" _yy_instance_struct.rotation   = _variables_struct[$ _variable_name_i];
		else if _variable_name_i == "image_index" _yy_instance_struct.imageIndex = _variables_struct[$ _variable_name_i];
		else if _variable_name_i == "image_speed" _yy_instance_struct.imageSpeed = _variables_struct[$ _variable_name_i];
		else
		{
			var _new_prop = G2L_create_yy_instance_property(_object_name, _variable_name_i, _variables_struct[$ _variable_name_i]);
			array_push(_properties_array, _variables_struct[$ _variable_name_i]);
		}
		_i++;
	}
	_yy_instance_struct[$ "properties"] = _properties_array;
}
return _yy_instance_struct;
}

// TEST create empty instance
snapfrom
_inst = G2L_create_yy_instance(10, 10, "oTest", "oTest" + "_" + 1, undefined)
array_push( layers[0].instances, _inst)
snapto

// TEST create instance with one prop
_inst = G2L_create_yy_instance(10, 10, "oTest", "oTest" + "_" + 1, { entier: 1 });
array_push( layers[0].instances, _inst)

// TEST create instance with system prop
_inst = G2L_create_yy_instance(10, 10, "oTest", "oTest" + "_" + 1, {image_angle: 90 });
array_push( layers[0].instances, _inst

// TEST create instance with many props
_inst = G2L_create_yy_instance(10, 10, "oTest", "oTest" + "_" + 1, { entier: 1 });
array_push( layers[0].instances, _inst)

// TEST parse an extract from LDtk to create instance with many props

